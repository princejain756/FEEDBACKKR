{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nconst AUTH_KEY = 'kriedko_admin_auth';\nconst ADMIN_USER = 'kriedadmin';\nconst ADMIN_PASS = 'kriedamin214123';\nexport function getStoredAuth() {\n  try {\n    const raw = localStorage.getItem(AUTH_KEY);\n    return raw ? JSON.parse(raw) : null;\n  } catch {\n    return null;\n  }\n}\nexport function setStoredAuth(auth) {\n  try {\n    if (!auth) {\n      localStorage.removeItem(AUTH_KEY);\n      return;\n    }\n    localStorage.setItem(AUTH_KEY, JSON.stringify(auth));\n  } catch {}\n}\nexport const useAuth = () => {\n  _s();\n  const [auth, setAuth] = useState(() => getStoredAuth());\n  useEffect(() => {\n    // keep state in sync with storage (basic)\n    const handle = () => setAuth(getStoredAuth());\n    window.addEventListener('storage', handle);\n    return () => window.removeEventListener('storage', handle);\n  }, []);\n  const isAuthenticated = useMemo(() => !!(auth !== null && auth !== void 0 && auth.isAuthenticated), [auth]);\n  const login = useCallback(async (username, password) => {\n    const ok = username === ADMIN_USER && password === ADMIN_PASS;\n    if (!ok) return {\n      success: false\n    };\n    const payload = {\n      isAuthenticated: true,\n      username: ADMIN_USER,\n      loginAt: new Date().toISOString()\n    };\n    setStoredAuth(payload);\n    setAuth(payload);\n    return {\n      success: true\n    };\n  }, []);\n  const logout = useCallback(() => {\n    setStoredAuth(null);\n    setAuth(null);\n  }, []);\n  return {\n    auth,\n    isAuthenticated,\n    login,\n    logout,\n    ADMIN_USER\n  };\n};\n_s(useAuth, \"eVY1xA89+KZ8dX6sZTgwhfRdAS4=\");\nexport const requireAuth = () => {\n  var _getStoredAuth;\n  return !!((_getStoredAuth = getStoredAuth()) !== null && _getStoredAuth !== void 0 && _getStoredAuth.isAuthenticated);\n};","map":{"version":3,"names":["useCallback","useEffect","useMemo","useState","AUTH_KEY","ADMIN_USER","ADMIN_PASS","getStoredAuth","raw","localStorage","getItem","JSON","parse","setStoredAuth","auth","removeItem","setItem","stringify","useAuth","_s","setAuth","handle","window","addEventListener","removeEventListener","isAuthenticated","login","username","password","ok","success","payload","loginAt","Date","toISOString","logout","requireAuth","_getStoredAuth"],"sources":["/Users/princejain756/feedback form/src/hooks/useAuth.js"],"sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\n\nconst AUTH_KEY = 'kriedko_admin_auth';\nconst ADMIN_USER = 'kriedadmin';\nconst ADMIN_PASS = 'kriedamin214123';\n\nexport function getStoredAuth() {\n  try {\n    const raw = localStorage.getItem(AUTH_KEY);\n    return raw ? JSON.parse(raw) : null;\n  } catch {\n    return null;\n  }\n}\n\nexport function setStoredAuth(auth) {\n  try {\n    if (!auth) {\n      localStorage.removeItem(AUTH_KEY);\n      return;\n    }\n    localStorage.setItem(AUTH_KEY, JSON.stringify(auth));\n  } catch {}\n}\n\nexport const useAuth = () => {\n  const [auth, setAuth] = useState(() => getStoredAuth());\n\n  useEffect(() => {\n    // keep state in sync with storage (basic)\n    const handle = () => setAuth(getStoredAuth());\n    window.addEventListener('storage', handle);\n    return () => window.removeEventListener('storage', handle);\n  }, []);\n\n  const isAuthenticated = useMemo(() => !!auth?.isAuthenticated, [auth]);\n\n  const login = useCallback(async (username, password) => {\n    const ok = username === ADMIN_USER && password === ADMIN_PASS;\n    if (!ok) return { success: false };\n\n    const payload = {\n      isAuthenticated: true,\n      username: ADMIN_USER,\n      loginAt: new Date().toISOString(),\n    };\n    setStoredAuth(payload);\n    setAuth(payload);\n    return { success: true };\n  }, []);\n\n  const logout = useCallback(() => {\n    setStoredAuth(null);\n    setAuth(null);\n  }, []);\n\n  return {\n    auth,\n    isAuthenticated,\n    login,\n    logout,\n    ADMIN_USER,\n  };\n};\n\nexport const requireAuth = () => !!getStoredAuth()?.isAuthenticated;\n\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAEjE,MAAMC,QAAQ,GAAG,oBAAoB;AACrC,MAAMC,UAAU,GAAG,YAAY;AAC/B,MAAMC,UAAU,GAAG,iBAAiB;AAEpC,OAAO,SAASC,aAAaA,CAAA,EAAG;EAC9B,IAAI;IACF,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAACN,QAAQ,CAAC;IAC1C,OAAOI,GAAG,GAAGG,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC,GAAG,IAAI;EACrC,CAAC,CAAC,MAAM;IACN,OAAO,IAAI;EACb;AACF;AAEA,OAAO,SAASK,aAAaA,CAACC,IAAI,EAAE;EAClC,IAAI;IACF,IAAI,CAACA,IAAI,EAAE;MACTL,YAAY,CAACM,UAAU,CAACX,QAAQ,CAAC;MACjC;IACF;IACAK,YAAY,CAACO,OAAO,CAACZ,QAAQ,EAAEO,IAAI,CAACM,SAAS,CAACH,IAAI,CAAC,CAAC;EACtD,CAAC,CAAC,MAAM,CAAC;AACX;AAEA,OAAO,MAAMI,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACL,IAAI,EAAEM,OAAO,CAAC,GAAGjB,QAAQ,CAAC,MAAMI,aAAa,CAAC,CAAC,CAAC;EAEvDN,SAAS,CAAC,MAAM;IACd;IACA,MAAMoB,MAAM,GAAGA,CAAA,KAAMD,OAAO,CAACb,aAAa,CAAC,CAAC,CAAC;IAC7Ce,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEF,MAAM,CAAC;IAC1C,OAAO,MAAMC,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEH,MAAM,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,eAAe,GAAGvB,OAAO,CAAC,MAAM,CAAC,EAACY,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEW,eAAe,GAAE,CAACX,IAAI,CAAC,CAAC;EAEtE,MAAMY,KAAK,GAAG1B,WAAW,CAAC,OAAO2B,QAAQ,EAAEC,QAAQ,KAAK;IACtD,MAAMC,EAAE,GAAGF,QAAQ,KAAKtB,UAAU,IAAIuB,QAAQ,KAAKtB,UAAU;IAC7D,IAAI,CAACuB,EAAE,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAM,CAAC;IAElC,MAAMC,OAAO,GAAG;MACdN,eAAe,EAAE,IAAI;MACrBE,QAAQ,EAAEtB,UAAU;MACpB2B,OAAO,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IAClC,CAAC;IACDrB,aAAa,CAACkB,OAAO,CAAC;IACtBX,OAAO,CAACW,OAAO,CAAC;IAChB,OAAO;MAAED,OAAO,EAAE;IAAK,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,MAAM,GAAGnC,WAAW,CAAC,MAAM;IAC/Ba,aAAa,CAAC,IAAI,CAAC;IACnBO,OAAO,CAAC,IAAI,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLN,IAAI;IACJW,eAAe;IACfC,KAAK;IACLS,MAAM;IACN9B;EACF,CAAC;AACH,CAAC;AAACc,EAAA,CAtCWD,OAAO;AAwCpB,OAAO,MAAMkB,WAAW,GAAGA,CAAA;EAAA,IAAAC,cAAA;EAAA,OAAM,CAAC,GAAAA,cAAA,GAAC9B,aAAa,CAAC,CAAC,cAAA8B,cAAA,eAAfA,cAAA,CAAiBZ,eAAe;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}